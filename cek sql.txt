A. set echo off hea on
  set lines 700 pages 10000 long 10000
  col sql_id from a30
  col snaptime for a30 
  select to_char(begin_interval_time,'yy-mm-dd hh24:mi')|| ' - ' || to_char(end_interval_time,'hh24:mi') snaptime,sql_id,PLAN_HASH_VALUE PLAN_HASH,
  (CASE EXECUTIONS_DELTA WHEN 0 THEN 1 ELSE EXECUTIONS_DELTA END) EXEC_DELTA,
  TRUNC((ELAPSED_TIME_DELTA/1000000)) ELAP_DELTA_SEC,
  TRUNC((ELAPSED_TIME_DELTA/1000000)/(CASE EXECUTIONS_DELTA WHEN 0 THEN 1 ELSE EXECUTIONS_DELTA END),3) AVG_ELAP_SEC,
  ROWS_PROCESSED_DELTA ROWS_DELTA,
  TRUNC(ROWS_PROCESSED_DELTA/(CASE EXECUTIONS_DELTA WHEN 0 THEN 1 ELSE EXECUTIONS_DELTA END)) AVG_ROW,TRUNC(DISK_READS_DELTA/(CASE EXECUTIONS_DELTA WHEN 0 THEN 1 ELSE EXECUTIONS_DELTA END)) DISK_READS
  from dba_hist_sqlstat a join dba_hist_snapshot b on (a.snap_id=b.snap_id and a.instance_number=b.instance_number)
  and begin_interval_time > trunc(sysdate-30) and sql_id='f3ww8rgva3hrs' order by 1 asc;
  
                                                         <SQL_ID QUERY>
                             
B. SELECT * FROM table(DBMS_XPLAN.DISPLAY_AWR('f3ww8rgva3hrs'));


set echo off hea on
  set lines 700 pages 10000 long 10000
  col sql_id from a30
  col snaptime for a30 
  select to_char(begin_interval_time,'yy-mm-dd hh24:mi')|| ' - ' || to_char(end_interval_time,'hh24:mi') snaptime,sql_id,PLAN_HASH_VALUE PLAN_HASH,
  (CASE EXECUTIONS_DELTA WHEN 0 THEN 1 ELSE EXECUTIONS_DELTA END) EXEC_DELTA,
  TRUNC((ELAPSED_TIME_DELTA/1000000)) ELAP_DELTA_SEC,
  TRUNC((ELAPSED_TIME_DELTA/1000000)/(CASE EXECUTIONS_DELTA WHEN 0 THEN 1 ELSE EXECUTIONS_DELTA END),3) AVG_ELAP_SEC,
  ROWS_PROCESSED_DELTA ROWS_DELTA,
  TRUNC(ROWS_PROCESSED_DELTA/(CASE EXECUTIONS_DELTA WHEN 0 THEN 1 ELSE EXECUTIONS_DELTA END)) AVG_ROW,TRUNC(DISK_READS_DELTA/(CASE EXECUTIONS_DELTA WHEN 0 THEN 1 ELSE EXECUTIONS_DELTA END)) DISK_READS
  from dba_hist_sqlstat a join dba_hist_snapshot b on (a.snap_id=b.snap_id and a.instance_number=b.instance_number)
  and begin_interval_time > trunc(sysdate-30) and table='DPOSTPAIDBILLING_STAG2_16' order by 1 asc;
 
 ---
  set wrap off
col elapsed_time_delta format 9999999999
col plan_hash_value    format 9999999999
col seconds            format 99999
col executions_total   format 99999999

select
   stat.sql_id, 
   plan_hash_value,
   rpad(parsing_schema_name,10) "schema",elapsed_time_total/1000000 "seconds",  
   elapsed_time_delta,disk_reads_delta,
   stat.executions_total,
   to_char(ss.end_interval_time,'dd-mm-yy hh24:mi:ss') "endtime", 
   rpad(sql_text,40) text,ss.snap_id
from
   dba_hist_sqlstat  stat,
   dba_hist_sqltext  txt,
   dba_hist_snapshot ss
where
   stat.sql_id = txt.sql_id
and
   stat.dbid = txt.dbid
and
   ss.dbid = stat.dbid
and
   ss.instance_number = stat.instance_number
and
   stat.snap_id = ss.snap_id
and
   parsing_schema_name not like 'sys%' 
and
   ss.begin_interval_time >= sysdate-40
and
   stat.elapsed_time_total/1000000 > 20
order by
   elapsed_time_total desc;
   
   
   ------
   
   set linesize 999
set pagesize 999
col INST_ID for 999
col osuser for a10
col TIME for a10
col MACHINE for a20
col USERNAME for a15
col osuser for a15
col event for a30
col sql_fulltext for a30
  select a.INST_ID,a.machine,a.status, a.osuser,a.username,a.sid,a.serial#,a.SQL_ID,a.EVENT, 
  (case
     when trunc(last_call_et)<60 then to_char(trunc(last_call_et))||' Sec(s)'
     when trunc(last_call_et/60)<60 then to_char(trunc(last_call_et/60))||' Min(s)'
     when trunc(last_call_et/60/60)<24 then to_char(trunc(last_call_et/60/60))||' Hour(s)'
     when trunc(last_call_et/60/60/24)>=1  then to_char(trunc(last_call_et/60/60/24))||' Day(s)'
   end) as time,sql_fulltext
from gv$session a,gv$sqlarea b
where a.sql_address=b.address
and a.sql_hash_value=b.hash_value 
and a.username is not null
and a.machine ='OSDRDSBSDNAPP6'
and a.serial#='20875'
  --and a.status='ACTIVE'
and users_executing>0 order by time desc;